{"ast":null,"code":"'use strict';\n\nconst {\n  URLWithLegacySupport,\n  format\n} = require('./url');\n\n/**\n * @param {string | undefined} url\n * @param {any} [location]\n * @param {any} [protocolMap]\n * @param {any} [defaultProtocol]\n */\nmodule.exports = function (url) {\n  let location = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let protocolMap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let defaultProtocol = arguments.length > 3 ? arguments[3] : undefined;\n  let protocol = location.protocol ? location.protocol.replace(':', '') : 'http';\n\n  // Check protocol map\n  protocol = (protocolMap[protocol] || defaultProtocol || protocol) + ':';\n  let urlParsed;\n  try {\n    urlParsed = new URLWithLegacySupport(url);\n  } catch (err) {\n    urlParsed = {};\n  }\n  const base = Object.assign({}, location, {\n    protocol: protocol || urlParsed.protocol,\n    host: location.host || urlParsed.host\n  });\n  return new URLWithLegacySupport(url, format(base)).toString();\n};","map":null,"metadata":{},"sourceType":"script"}